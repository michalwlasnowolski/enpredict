#from django.db import models
import os, os.path
import sys
import glob


class WigFileCreator():


    def find_path(self, wigfile):

        path=''
        static_path='enpredict/data/'
        database=''
        file_name=wigfile.file_name
        classificator=''
        specific_tissue=''



        if wigfile.database=='fl':
        
            database='fly/'

            if wigfile.modifications == 'ye' and wigfile.kmers=='ye':
                classificator = 'modifications_4mers/'

            elif wigfile.modifications == 'ye' and wigfile.kmers=='no':
                classificator = 'modifications/'

            elif wigfile.modifications == 'no' and wigfile.kmers=='ye':
                classificator = '4mers/'

            path+=database+classificator+file_name
            static_path+=database+classificator+file_name

        else:

            if wigfile.database == 'vi':
                database = 'vista'
            elif wigfile.database == 'fa':
                database = 'fantom'

            
            if wigfile.specific_tissue == 'bo':
                specific_tissue = 'both'
            elif wigfile.specific_tissue == 'po':
                specific_tissue = 'positives'
            elif wigfile.specific_tissue == 'br':
                specific_tissue = 'brain'

            elif wigfile.specific_tissue == 'he':
                specific_tissue = 'heart'

            if wigfile.modifications == 'no':
                classificator='nomodification'
            if wigfile.modifications == 'h1':
                classificator='h1hesc'
            if wigfile.modifications == 't1':
                classificator='tier1'
            if wigfile.modifications == 't2':
                classificator='tier12'

            adres='%s/%s_%s_%s/%s' % (database, database, specific_tissue, classificator, file_name)
            path+=adres
            static_path+=adres
        return path, static_path

            


    def create_wigfile(self, file_info, file_name):


        species=''
        specific_tissue='no'
        modifications='no'
        kmers='no'

        chr_name=file_info[0]
        frame=file_info[1]
        step=file_info[2]
        database=''
        

        if 'vista' in file_info:
            database = 'vi'
        if 'fantom' in file_info:
            database = 'fa'
        if 'fly' in file_info:
            database = 'fl'


        if database == 'vi' or database == 'fa':
            species='Hs'
        else:
            species='Dm'

        if 'heart' in file_info:
            specific_tissue = 'he'
        if 'both' in file_info:
            specific_tissue = 'bo'
        if 'positives' in file_info:
            specific_tissue = 'po'
        if 'brain' in file_info:
            specific_tissue = 'br'
        if 'h1hesc' in file_info:
            modifications='h1'
        if 'tier1' in file_info:
            modifications='t1'
        if 'tier12' in file_info:
            modifications='t2'
        if 'modifications' in file_info:
            modifications='ye'
        if '4mers' in file_info:
            kmers = 'ye'




        wigfile=WigFile()
        wigfile.species=species
        wigfile.frame=frame
        wigfile.step=step
        wigfile.chr_name=chr_name
        wigfile.database=database
        wigfile.modifications=modifications
        wigfile.file_name=file_name

        wigfile.kmers=kmers
        wigfile.specific_tissue=specific_tissue

        
        path, static_path=self.find_path(wigfile)
        wigfile.file_path=path
        wigfile.file_static_path=static_path 

        #print path
        
        #print wigfile.file_path



        wigfile.save()
#        return wigfile
       
       

class LoadWigFile():

    def load_wigfile(self):

        #path_to_folder='/home/yozec/Django_apps/bin/lemonade/test_data'
        path_to_file='/home/enpredict/lemonade/static/enpredict/data/list_files.txt'
        files_list=[]
        #list_paths=glob.glob(path_to_folder+'/*')

        files_list=[x.strip() for x in open(path_to_file)]
        #print files_list

        for i in xrange(len(files_list)):
            
            file_name=files_list[i]
            
            file_info = files_list[i][:-4].split('_')
            print file_name
            print file_info

            #wigfile = WigFileCreator()
            #wigfile.create_wigfile(file_info, file_name)

